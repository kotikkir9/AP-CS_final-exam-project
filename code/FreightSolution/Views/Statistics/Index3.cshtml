@model FreightSolution.Models.Statistics.StatisticsModel

@{
    var userData = ViewBag.UserData as UserDataModel;
}

<div class="d-flex justify-content-between">
    <div class="form-group has-default w-50">
        <i class="fa pr-3" style="font-size: 35px"></i>
    </div>

    <div class="btn-group" role="group" aria-label="Freight/Additional Cost">
        <a id="Download" href="#" style="color: #D32F2F" data-toggle="modal" data-target="#DownloadEdit">
            <span class="fa fa-cloud-download-alt pl-3" style="font-size: 30px"></span><br/>
            <span style="font-size: 14px">Download</span>
        </a>
    </div>
</div>

<div class="d-flex flex-row flex-nowrap">
    <div id="Panels" class="ml-0 pr-sm-0">

        <div class="card">
            <div class="card-header card-header-primary">
                REPORT
            </div>
            <div id="statistics-report" class="card-body">
                <select id="report-select" class="selectpicker w-100" data-style="btn btn-sm btn-outline btn-round select-with-transition">
                    <option value="lane">Lane Intervals</option>
                    <option value="kg">Wight Intervals</option>
                    <option value="qty">Quantity Intervals</option>
                    <option value="cbm">Cubic Meter Intervals</option>
                    <option value="ldm">Load Meter Intervals</option>
                    <option value="ac">Additional Costs</option>
                </select>
            </div>
        </div>

        <div class="card">
            <div class="card-header card-header-primary">
                LAYOUT
            </div>
            <div id="layout-panel" class="card-body">
                <select id="layout-select" name="@nameof(Model.Filter.Layout)" class="selectpicker w-100" data-style="btn btn-sm btn-outline btn-round select-with-transition w-100"></select>
            </div>
        </div>

        <div class="card" style="min-width:22em;">
            <div class="card-header card-header-primary">
                FILTERS
            </div>
            <div id="statistics-filter" class="card-body">
                @{
                    await Html.RenderPartialAsync("TestFilterPartial", Model);
                }
            </div>
        </div>
    </div>

    <div id="StatisticsCard" class="card ml-3 mr-0">
        <div class="card-header card-header-primary card-header-icon">
            <div class="card-icon">
                <i class="material-icons">assignment</i>
            </div>
            <div class="card-title d-flex justify-content-between">
                <h4>Statistics</h4>
                <i class="material-icons text-dark expand-button">open_in_full</i>
            </div>
        </div>
        <div id="statistics-content" class="card-body"></div>
    </div>
</div>

<input type="hidden" id="statistics-data-url" value="@Url.Action("Index", "Statistics")">

<template id="toggle-button-template">
    <div class="d-flex align-items-center">
        <label class="d-flex mb-1 mr-1 align-items-center font-weight-bold text-left toggle-description"></label>
        <div class="text-right">
            <div class="togglebutton">
                <label>
                    <input type="checkbox">
                    <span class="toggle"></span>
                </label>
            </div>
        </div>
    </div>
</template>

@section Css
{
    <link href="@Url.Content("~/css/views/statistics.css")" rel="stylesheet" type="text/css"/>
    <link href="@Url.Content("~/css/components/matrix.css")" rel="stylesheet" type="text/css"/>
}

@section Scripts
{
    <script defer src="~/js/dialogs.js"></script>
    <script defer type="module" src="@Url.Content("/js/statistics/index.js")"></script>
}